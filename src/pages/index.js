import React, { useEffect, useState } from 'react';
import ReactPaginate from 'react-paginate';
import Head from 'next/head';
import { Inter } from 'next/font/google';
import data from '@/data/pokemon.json';

const inter = Inter({ subsets: ['latin'] });

const pokemons = data.results;

//function Items({ currentItems }) {
//	return (
//		<>
//			{currentItems &&
//				currentItems.map((item) => (
//					<div>
//						<h3>Item #{item}</h3>
//					</div>
//				))}
//		</>
//	);
//}

//function PaginatedItems({ itemsPerPage }) {
//	// Here we use item offsets; we could also use page offsets
//	// following the API or data you're working with.
//	const [itemOffset, setItemOffset] = useState(0);

//	// Simulate fetching items from another resources.
//	// (This could be items from props; or items loaded in a local state
//	// from an API endpoint with useEffect and useState)
//	const endOffset = itemOffset + itemsPerPage;
//	console.log(`Loading items from ${itemOffset} to ${endOffset}`);
//	const currentItems = pokemons.slice(itemOffset, endOffset);
//	const pageCount = Math.ceil(pokemons.length / itemsPerPage);

//	// Invoke when user click to request another page.
//	const handlePageClick = (event) => {
//		const newOffset = (event.selected * itemsPerPage) % pokemons.length;
//		console.log(
//			`User requested page number ${event.selected}, which is offset ${newOffset}`
//		);
//		setItemOffset(newOffset);
//	};

//	return (
//		<>
//			<Items currentItems={currentItems} />
//			<ReactPaginate
//				breakLabel="..."
//				nextLabel="next >"
//				onPageChange={handlePageClick}
//				pageRangeDisplayed={5}
//				pageCount={pageCount}
//				previousLabel="< previous"
//				renderOnZeroPageCount={null}
//			/>
//		</>
//	);
//}

export default function Home() {
	const [pokemons, setPokemons] = useState();
	const [detail, setDetail] = useState();
	const [isModalOpen, setIsModalOpen] = useState(false);

	const handlePopup = (index) => {};

	return (
		<>
			<Head>
				<title>Pokedex</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link
					rel="icon"
					href="/favicon.ico"
				/>
			</Head>
			<main className="py-10">
				<div className="container">
					<h1 className="text-xl font-bold mb-10">Pokedex</h1>
					<div className="grid grid-cols-4 gap-4">
						{data.results &&
							data.results.map((item, index) => {
								return (
									<div key={index}>
										<div
											className="border rounded-md p-4 cursor-pointer"
											onClick={handlePopup(index)}>
											<h2>{item.name}</h2>
										</div>
									</div>
								);
							})}
					</div>
					{/*<PaginatedItems itemsPerPage={20} />*/}
				</div>
			</main>

			{/*Simple Modal*/}
			{isModalOpen && (
				<div>
					<div>{detail.name}</div>
				</div>
			)}
		</>
	);
}
